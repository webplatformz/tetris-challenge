buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath group: 'cz.habarta.typescript-generator', name: 'typescript-generator-gradle-plugin', version: '2.29.814'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.4.20"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.4.20"
    id 'io.quarkus'
}
apply plugin: 'cz.habarta.typescript-generator'

repositories {
    mavenCentral()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-undertow-websockets'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'io.quarkus:quarkus-arc'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'ch.zuhlke.tetris'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

generateTypeScript {
    jsonLibrary = 'jackson2'
    classPatterns = ['ch.zuhlke.tetris.transport.*Response',
                     'ch.zuhlke.tetris.transport.*Request',
                     'ch.zuhlke.tetris.transport.RequestMessage']
    outputKind = 'global'
    outputFile = '../client/src/backendTypes.d.ts'
}
